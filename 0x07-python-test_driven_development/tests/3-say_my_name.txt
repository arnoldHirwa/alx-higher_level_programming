The ``3-say_my_name`` module
============================

Using ``say_my_name``
---------------------

This is a file in reStructured Text format. First import ``say_my_name`` from the ``3-say_my_name`` module:

>>> say_my_name = __import__('3-say_my_name').say_my_name

Now use it:


Test with empty strings
------------------------------------------------------------------------------
>>> say_my_name("", "")
My name is  



Test with none
------------------------------------------------------------------------------
>>> say_my_name(None)
Traceback (most recent call last):
    ...
TypeError: first_name must be a string


Test Last name is a tuple
------------------------------------------------------------------------------
>>> say_my_name("Walter", (1, 2, 3))
Traceback (most recent call last):
    ...
TypeError: last_name must be a string



Test Witout a value
------------------------------------------------------------------------------
>>> say_my_name()
Traceback (most recent call last):
    ...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Test basic
------------------------------------------------------------------------------
>>> say_my_name("Hirwa", "Arnold")
My name is Hirwa Arnold



Test without a last name
------------------------------------------------------------------------------
>>> say_my_name("Bobi")
My name is Bobi 



Both the first name and last name must be strings
------------------------------------------------------------------------------
>>> say_my_name(12, "White")
Traceback (most recent call last):
    ...
TypeError: first_name must be a string


